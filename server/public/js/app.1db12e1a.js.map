{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/menubar.vue?adcf","webpack:///./src/plugins/icons.js","webpack:///./src/plugins/vuetify.js","webpack:///src/components/sketch.vue","webpack:///./src/components/sketch.vue","webpack:///./src/components/sketch.vue?b134","webpack:///./src/router/index.js","webpack:///./src/router/routes.js","webpack:///./src/store/git-tree-modules/tree-formatter.js","webpack:///./src/store/git-tree-modules/node.js","webpack:///./src/store/git-tree-modules/tree.js","webpack:///./src/store/sketch.store.js","webpack:///./src/store/index.js","webpack:///./src/store/sidebar.store.js","webpack:///./src/store/command.store.js","webpack:///src/components/menubar.vue","webpack:///./src/components/menubar.vue?ef08","webpack:///./src/components/menubar.vue?a16e","webpack:///./src/store/git-tree-modules/command.js","webpack:///./src/store/git-tree-modules/command-handler.js","webpack:///src/components/sidebar.vue","webpack:///./src/components/sidebar.vue?785c","webpack:///./src/components/sidebar.vue?d255","webpack:///./src/components/footer.vue?450b","webpack:///src/components/footer.vue","webpack:///./src/components/footer.vue?c421","webpack:///./src/components/app-root.vue","webpack:///src/components/app-root.vue","webpack:///./src/components/app-root.vue?0744","webpack:///./src/main.js","webpack:///./src/components/footer.vue?e0d3","webpack:///./src/components/menubar.vue?343c","webpack:///./src/components/sidebar.vue?2970"],"names":["library","Vue","attrs","on","staticClass","VBtn","VCol","VRow","router","mode","routes","name","path","display","meta","title","redirect","document","to","next","TreeFormatter","this","_canvasWidth","_canvasHeight","_margin","node","space","center","y","height","d","childrenSpace","endX","i","_recursivelyAdjust","startX","tree","startXPos","endXPos","startYPos","yIncrement","Math","t","width","val","Node","_init","id","_id","_branchNames","_x","_y","_d","_r","diameter","_isAnimated","_isBeingCreated","_isPushed","_parents","_children","_allocatedTextPosition","x","_textYDistanceFromNode","push","childNode","console","splice","parentsIds","childIds","branchNames","status","pos","Tree","_formatter","_buildPreviewTree","_root","_nodeSet","_idToNodeDict","_branchNameToNodeDict","_info","totalNodes","levelOrder","_currentBranchName","_currentBranchNode","_animationSpeed","_nodeDiameter","_nextId","n","branchName","nodeId","removeBranchFromNode","fromNode","toNode","parentNode","add","updateTreeInfo","adjust","parentBranchName","addChildToNode","parentId","parents","forEach","markNodeForDeletion","currentNode","currentNodePathsToRoot","getPathsToNode","rebaseNodePathsToRoot","j","lcaNode","_getLCAFromPathsToRoot","startNode","allPaths","currentPath","currentPathSnapshot","_recurseToGetPathsToRoot","clonedCurrentPath","nodeXPathToRoot","s","nodeYPathToRoot","descendentNode","paths","pathSet","Array","_recurseToGetBranchSpecificPath","rootNode","root","animationSpeed","adjustTree","currentLevel","nextLevel","str","lvl","n1","n2","n3","n4","n5","n6","n7","n8","n9","n10","n11","n12","n13","n14","n15","n16","n17","n18","addChildToNodeId","getNodeFromId","addParent","formatter","margin","spd","state","hasStarted","Vuex","modules","sidebarWidth","sidebarVisibilityStatus","actions","context","queue","history","Sketch","nodeSet","branchNameToNodeDict","treeInfo","treeFormatter","plugins","CreatePersistedState","key","o","value","VAppBar","VAppBarNavIcon","VCard","VCardText","VCardTitle","VDialog","VSlideXTransition","VSlideYTransition","VSpacer","VToolbarTitle","Command","_cmd","_hasExecuted","_undoInfo","jsonInfo","CommandHandler","_regex","cmd","found","validCommands","cmdTokens","cmdObject","command","operationType","branch","checkout","merge","rebase","r","popped","newNode","mergeWithNode","commit","rebaseNode","lcaInfo","count","branchSpecificPath","createNodesInfo","removeNodesInfo","lastCommittedNode","pathsToRoot","pushedNodeIds","ref","VContainer","VDivider","VFooter","VList","VListItem","VListItemContent","VListItemGroup","VNavigationDrawer","VSubheader","VTextField","VApp","VContent","axios","sync","app","vuetify"],"mappings":"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","file":"js/app.1db12e1a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./menubar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./menubar.vue?vue&type=style&index=0&lang=css&\"","// https://github.com/FortAwesome/vue-fontawesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHome, faEnvelope, faHeart, faInfo, faList, faSpinner, faCodeBranch, faCheck, faBomb, faRocket, faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { faFontAwesome, faMicrosoft, faVuejs, faLinkedin, faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nlibrary.add(\n    faHome, faEnvelope, faHeart, faInfo, faList, faSpinner, faCodeBranch, faCheck, faBomb, faRocket, faLightbulb,\n    faFontAwesome, faMicrosoft, faVuejs, faLinkedin, faGithubAlt\n);\n\nexport {\n    FontAwesomeIcon\n};\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({});\n","<template>\n    <div>\n        <v-row align=\"center\" justify=\"center\">\n            <vue-p5 @setup=\"setup\" @draw=\"draw\" @mousepressed=\"mousePressed\" @mousereleased=\"mouseReleased\" @touchstarted=\"touchStarted\" @touchended=\"touchEnded\" @touchmoved=\"touchMoved\"></vue-p5>\n        </v-row>\n\n        <v-row v-if=\"!hasSimulationStarted\" align=\"center\" justify=\"center\">\n            <v-col align=\"center\">\n                <v-btn medium color=\"error\" @click.prevent=\"startSimulation\"> \n                    Launch <span class=\"subtitle-1 ml-1\" style=\"color: white;\"> <font-awesome-icon icon=\"rocket\" /> </span>\n                </v-btn>\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\n    import VueP5 from \"vue-p5\";\n    import { mapGetters, mapActions } from 'vuex';\n\n    export default {\n        data: () => ({\n            dimensions: {\n                windowWidth: 0,\n                windowHeight: 0,\n\n                sketchWidth: 1000,\n                sketchHeight: 800,\n                \n                sketchMarginTop: 100,\n                sketchMarginBottom: 150,\n                sketchMarginLeft: 350,\n                sketchMarginRight: 100 \n            },\n\n            colors: {\n                background: 255,\n                initialStroke: 255,\n                finalStroke: 0,\n                currentStrokeForBeingCreated: 255,\n                currentStrokeForBeingDeleted: 0,\n                fill: '#DCF0EB',\n                deletedFill: '#e0210b',\n                line: 0,\n                text: '#bd3417'\n            },\n\n            mouseOnNode: undefined,\n            isDragging: false\n        }),\n\n        components: {\n            \"vue-p5\": VueP5\n        },\n        \n        created() {\n\n        },\n\n        mounted() {\n            this.$nextTick(function() {\n                this.adjustDimensions(null);\n            })\n        },\n        \n        computed: {\n            ...mapGetters({\n                sidebarWidth: 'sidebarWidth',\n                tree: 'tree',\n                root: 'root',\n                nodeSet: 'nodeSet',\n                branchNameToNodeDict: 'branchNameToNodeDict',\n                treeInfo: 'treeInfo',\n                treeFormatter: 'treeFormatter',\n                animationSpeed: 'animationSpeed',\n                hasSimulationStarted: 'hasStarted'\n            }),\n        },\n\n        methods: {\n            ...mapActions([\n                'setFormatterCanvasWidth',\n                'setFormatterCanvasHeight',\n                'setAnimationSpeed',\n                'startSimulation'\n            ]),\n\n            adjustDimensions(sketch) {\n                if (this.$vuetify.breakpoint.name === 'xs' || this.$vuetify.breakpoint.name === 'sm') {\n                    this.dimensions.sketchMarginLeft = 10;\n                    this.dimensions.sketchMarginRight = 10;\n                }\n                else {\n                    this.dimensions.sketchMarginLeft = this.sidebarWidth + 50;\n                    this.dimensions.sketchMarginRight = 50;\n                }\n\n                this.dimensions.windowWidth = document.documentElement.clientWidth;\n                this.dimensions.windowHeight = document.documentElement.clientHeight;\n\n                this.dimensions.sketchWidth = this.dimensions.windowWidth - this.dimensions.sketchMarginLeft - this.dimensions.sketchMarginRight;\n                this.dimensions.sketchHeight = this.dimensions.windowHeight - this.dimensions.sketchMarginTop - this.dimensions.sketchMarginBottom;\n\n                if (sketch !== undefined && sketch !== null) {\n                    sketch.resizeCanvas(this.dimensions.sketchWidth, this.dimensions.sketchHeight);\n                }\n\n                this.setFormatterCanvasWidth(this.dimensions.sketchWidth);\n                this.setFormatterCanvasHeight(this.dimensions.sketchHeight);\n\n                this.tree.adjust();\n            },\n\n            setup(sketch) {\n                sketch.createCanvas(this.dimensions.sketchWidth, this.dimensions.sketchHeight);\n                this.adjustDimensions(sketch);\n                \n                sketch.background(this.colors.background);\n                sketch.stroke(this.colors.initialStroke);\n                sketch.noFill();\n                \n                sketch.angleMode(sketch.RADIANS);\n                sketch.ellipseMode(sketch.CENTER);\n                \n                sketch.textSize(10);\n                sketch.textAlign(sketch.CENTER, sketch.CENTER);\n\n                window.addEventListener('resize', () => {\n                    console.log('EventListener::windowResized');\n                    this.adjustDimensions(sketch);\n                });\n            },\n\n            draw(sketch) {\n                sketch.background(this.colors.background);\n                \n                if (this.mouseOnNode !== undefined && this.isDragging) {\n                    this.mouseOnNode.x = sketch.mouseX;\n                    this.mouseOnNode.y = sketch.mouseY;\n                    this.mouseOnNode.allocatedTextPosition['x'] = this.mouseOnNode.x;\n                    this.mouseOnNode.allocatedTextPosition['y'] = this.mouseOnNode.y - this.mouseOnNode.r - this.mouseOnNode.textYDistanceFromNode;\n                }\n\n                for (let node of this.nodeSet) {\n                    sketch.strokeWeight(1.2);\n                    sketch.drawingContext.setLineDash(node.isPushed ? [] : [10, 5]);\n                    \n                    if (node.isAnimated) {\n                        this.drawAnimatingNode(sketch, node);\n                        break;\n                    }\n                    else {\n                        if (!this.isDragging && this.isMouseOnNode(sketch, node)) {\n                            this.mouseOnNode = node;\n                        }\n\n                        this.drawStaticNode(sketch, node);\n                        this.drawBranchNames(sketch, node);\n                        this.drawLineToParents(sketch, node);\n                    }\n                }\n                \n            },\n\n            drawAnimatingNode(sketch, node) {\n                if (node.isBeingCreated) {\n                    sketch.stroke(this.colors.currentStrokeForBeingCreated);\n                    sketch.noFill();\n                    sketch.ellipse(node.x, node.y, node.d, node.d);\n\n                    if (this.colors.currentStrokeForBeingCreated > this.colors.finalStroke) {\n                        let nextStrokeColor = this.colors.currentStrokeForBeingCreated - this.animationSpeed;\n                        this.colors.currentStrokeForBeingCreated = nextStrokeColor < this.colors.finalStroke ? this.colors.finalStroke : nextStrokeColor;\n                    }\n                    else {\n                        node.isAnimated = false;\n                        node.isBeingCreated = false;\n                        this.colors.currentStrokeForBeingCreated = this.colors.initialStroke;\n                    }\n                }\n                else {\n                    sketch.stroke(this.colors.currentStrokeForBeingDeleted);\n                    sketch.fill(this.colors.deletedFill);\n                    sketch.ellipse(node.x, node.y, node.d, node.d);\n                    \n                    this.drawLineToParents(sketch, node);\n                    \n                    if (this.colors.currentStrokeForBeingDeleted < this.colors.initialStroke) {\n                        let nextStrokeColor = this.colors.currentStrokeForBeingDeleted + this.animationSpeed;\n                        this.colors.currentStrokeForBeingDeleted = nextStrokeColor > this.colors.initialStroke ? this.colors.initialStroke : nextStrokeColor;\n                    }\n                    else {\n                        node.isAnimated = false;\n                        this.tree.remove(node);\n                        this.colors.currentStrokeForBeingDeleted = this.colors.finalStroke;\n                    \n                        if (!this.tree.areAnyNodesMarkedForDeletion()) {\n                            this.tree.adjust();\n                        }\n                    }\n                }\n            },\n\n            drawStaticNode(sketch, node) {\n                sketch.stroke(this.colors.finalStroke);\n                sketch.fill(this.colors.fill);\n                sketch.ellipse(node.x, node.y, node.d, node.d);\n\n                sketch.fill(this.colors.text);\n                sketch.noStroke();\n                sketch.textSize(10);\n                sketch.text(node.id, node.x, node.y);\n            },\n\n            drawLineToParents(sketch, node) {\n                if (node === undefined || node === null) {\n                    return;\n                }\n\n                for (let i = 0; i < node.parents.length; ++i) {\n                    if (node.parents[i] === null || node.parents[i] === node) {\n                        return;\n                    }\n\n                    let angle = this.getAngleBetweenNodes(sketch, node, node.parents[i]);\n                \n                    let x0 = Math.floor(node.x + ( node.r * sketch.cos(angle) ));\n                    let y0 = Math.floor(node.y - ( node.r * sketch.sin(angle) ));\n\n                    let x1 = Math.floor(node.parents[i].x + ( node.parents[i].r * sketch.cos(angle + sketch.PI) ));\n                    let y1 = Math.floor(node.parents[i].y - ( node.parents[i].r * sketch.sin(angle + sketch.PI) ));\n\n                    sketch.stroke(this.colors.line);\n                    sketch.line(x0, y0, x1, y1);\n                }\n            },\n\n            drawBranchNames(sketch, node) {\n                let x = node.allocatedTextPosition.x;\n                let y = node.allocatedTextPosition.y;\n                let width = node.allocatedTextPosition.width;\n                let height = node.allocatedTextPosition.height;\n                let branchNames = '';\n\n                sketch.fill(this.colors.text);\n                sketch.noStroke();\n                sketch.rectMode(sketch.CENTER);\n\n                for (let i = 0; i < node.branchNames.length; ++i) {\n                    if (this.tree.currentBranchName === node.branchNames[i]) {\n                        branchNames += '*';\n                    }\n                    branchNames += (node.branchNames[i] + ', ');\n                }\n\n                branchNames = branchNames.slice(0, -2);\n\n                sketch.textSize(12);\n                sketch.text(branchNames, x, y, width, height);\n            },\n\n            getAngleBetweenNodes(sketch, node1, node2) {\n                let vec1 = sketch.createVector(node1.r, 0);\n                let vec2 = sketch.createVector(node2.x - node1.x, node1.y - node2.y);\n                \n                let angle = vec1.angleBetween(vec2);\n\n                return angle;\n            },\n\n            isMouseOnNode(sketch, node) {\n                if(sketch.dist(node.x, node.y, sketch.mouseX, sketch.mouseY) < node.d/2){\n                    return true;\n                }\n                return false;\n            },\n\n            mousePressed(sketch) {\n                if (this.mouseOnNode !== undefined && sketch.dist(this.mouseOnNode.x, this.mouseOnNode.y, sketch.mouseX, sketch.mouseY) < this.mouseOnNode.d/2){\n                    this.isDragging = true;\n                }\n                return false;\n            },\n\n            mouseReleased() {\n                this.isDragging = false;\n                return false;\n            },\n\n            touchStarted(sketch) {\n                this.mousePressed(sketch);\n                return false;\n            },\n\n            touchEnded() {\n                this.mouseReleased();\n                return false;\n            },\n\n            touchMoved() {\n                return false;\n            }\n        },\n\n        beforeDestroy() {\n            window.removeEventListener('resize', this.readWindowWidth);\n            window.removeEventListener('resize', this.readWindowHeight);\n        }\n    }\n</script>\n\n\n<style>\n\n</style>\n","import { render, staticRenderFns } from \"./sketch.vue?vue&type=template&id=c9c8e300&\"\nimport script from \"./sketch.vue?vue&type=script&lang=js&\"\nexport * from \"./sketch.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCol,VRow})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-row',{attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('vue-p5',{on:{\"setup\":_vm.setup,\"draw\":_vm.draw,\"mousepressed\":_vm.mousePressed,\"mousereleased\":_vm.mouseReleased,\"touchstarted\":_vm.touchStarted,\"touchended\":_vm.touchEnded,\"touchmoved\":_vm.touchMoved}})],1),(!_vm.hasSimulationStarted)?_c('v-row',{attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-col',{attrs:{\"align\":\"center\"}},[_c('v-btn',{attrs:{\"medium\":\"\",\"color\":\"error\"},on:{\"click\":function($event){$event.preventDefault();return _vm.startSimulation($event)}}},[_vm._v(\" Launch \"),_c('span',{staticClass:\"subtitle-1 ml-1\",staticStyle:{\"color\":\"white\"}},[_c('font-awesome-icon',{attrs:{\"icon\":\"rocket\"}})],1)])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport { routes } from './routes';\n\nVue.use(VueRouter);\n\nlet router = new VueRouter({\n  mode: 'history',\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title;\n  next();\n});\n\nexport default router;\n","import Sketch from '../components/sketch'\n\nexport const routes = [\n    { name: 'Sketch', path: '/', component: Sketch, display: 'Sketch', meta: { title: 'GitFiddle' } },\n    { path: '*', redirect: '/' }\n];\n","class TreeFormatter {\n    #_canvasWidth;\n    #_canvasHeight;\n    \n    constructor() {\n        this._canvasWidth = 1000;\n        this._canvasHeight = 800;\n        this._margin = 10;\n    }\n\n    _recursivelyAdjust(node, minX, maxX, y, yIncrement) {\n        if (node === null || node === undefined) {\n            return;\n        }\n\n        let space = maxX - minX;\n        let center = (space / 2) + minX;\n\n        node.x = center;\n        node.y = y;\n\n        if (node.children.length === 0) {\n            node.allocatedTextPosition = {\n                x: center,\n                y: y - node.r - node.textYDistanceFromNode,\n                width: maxX,\n                height: node.d\n            }\n\n            return;\n        }\n\n        let childrenSpace = (space / node.children.length);\n        let startX = minX;\n        let endX = startX + childrenSpace;\n        let yPos = y + yIncrement;\n\n        node.allocatedTextPosition = {\n            x: center,\n            y: y - node.r - node.textYDistanceFromNode,\n            width: endX,\n            height: node.d\n        }\n\n        for (let i = 0; i < node.children.length; ++i) {\n            this._recursivelyAdjust(node.children[i], startX, endX, yPos, yIncrement);\n            startX = endX;\n            endX += childrenSpace;\n        }\n    }\n\n    adjustTree(tree) {\n        // console.log('\\n\\nTreeFormatter::adjustTree');\n\n        let startXPos = this._margin;\n        let endXPos = this._canvasWidth - this._margin;\n        let startYPos = this._margin;\n        let yIncrement = Math.min(100, ((this._canvasHeight - this._margin) / tree.info.levelOrder.length));\n\n        this._recursivelyAdjust(tree.root, startXPos, endXPos, startYPos, yIncrement);\n    }\n\n    set canvasWidth(width)      { this._canvasWidth = width; }\n    set canvasHeight(height)    { this._canvasHeight = height; }\n    set margin(val)             { this._margin = val; }\n\n    get canvasWidth()   { return this._canvasWidth; }\n    get canvasHeight()  { return this._canvasHeight; }\n    get margin()        { return this._margin; }\n}\n\nexport default TreeFormatter;\n","class Node {\n    #_id;\n    #_branchNames;\n    #_x;\n    #_y;\n    #_d;\n    #_r;\n    #_isAnimated;\n    #_isBeingCreated;\n    #_isBeingDeleted;\n    #_isPushed;\n    #_parents;\n    #_children;\n    #_allocatedTextPosition;\n\n    constructor(id, diameter) {\n        this._init(id.toString(), diameter);\n    }\n\n    _init(id, diameter) {\n        this._id = id;\n        this._branchNames = [];\n        this._x = 0;\n        this._y = 0;\n        this._d = diameter;\n        this._r = diameter / 2.0;\n        this._isAnimated = true;\n        this._isBeingCreated = true;\n        this._isPushed = false;\n        this._parents = [];\n        this._children = [];\n        this._allocatedTextPosition = {\n            x: null,\n            y: null,\n            width: null,\n            height: null\n        };\n        this._textYDistanceFromNode = 8;\n    }\n\n    set x(val)                      { this._x = val; }\n    set y(val)                      { this._y = val; }\n    set d(val)                      { this._d = val; this._r = val / 2.0; }\n    set r(val)                      { this._r = val; this._d = val * 2.0; }\n    set isAnimated(status)          { this._isAnimated = status; }\n    set isBeingCreated(status)      { this._isBeingCreated = status; }\n    set isPushed(status)            { this._isPushed = status; }\n    set allocatedTextPosition(pos)  { this._allocatedTextPosition = pos; }\n    set textYDistanceFromNode(val)  { this._textYDistanceFromNode = val; }\n\n    get id()                        { return this._id; }\n    get branchNames()               { return this._branchNames; }\n    get x()                         { return this._x; }\n    get y()                         { return this._y; }\n    get d()                         { return this._d; }\n    get r()                         { return this._r; }\n    get isAnimated()                { return this._isAnimated; }\n    get isBeingCreated()            { return this._isBeingCreated; }\n    get isPushed()                  { return this._isPushed; }\n    get parents()                   { return this._parents; }    \n    get children()                  { return this._children; }\n    get allocatedTextPosition()     { return this._allocatedTextPosition; }\n    get textYDistanceFromNode()     { return this._textYDistanceFromNode; }\n\n    addParent(node) {\n        if (!this._parents.includes(node)) {\n            this._parents.push(node);\n        }\n    }\n\n    addChild(childNode) {\n        if (childNode === null) {\n            console.log(`Node::addChild error: null child node provided`);    \n            return;\n        }\n\n        if (!this._children.includes(childNode)) {\n            this._children.push(childNode);\n        }\n    }\n\n    addBranch(name) {\n        if (!this._branchNames.includes(name)) {\n            this._branchNames.push(name);\n        }\n    }\n\n    removeParent(node) {\n        if (this._parents.includes(node)) {\n            this._parents.splice(this._parents.indexOf(node), 1);\n        }\n    }\n\n    removeBranch(name) {\n        if (this._branchNames.includes(name)) {\n            this._branchNames.splice(this._branchNames.indexOf(name), 1);\n        }\n    }\n\n    isLeaf() {\n        return (this._children.length === 0);\n    }\n\n    hasChild(childNode) {\n        if (this._children.length === 0) {\n            return false;\n        }\n        else if (this._children.includes(childNode)) {\n            return true;\n        }\n        \n        for (let i = 0; i < this._children.length; ++i) {\n            if (this._children[i].hasChild(childNode)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getNodeInfo() {\n        let parentsIds = [];\n        let childIds = [];\n\n        for (let i = 0; i < this._parents.length; ++i) {\n            parentsIds.push(this._parents[i].id);\n        }\n\n        for (let i = 0; i < this._children.length; ++i) {\n            childIds.push(this._children[i].id);\n        }\n\n        return {\n            id: this._id,\n            diameter: this._d,\n            parentIds: parentsIds,\n            childIds: childIds,\n            branchNames: this._branchNames\n        };\n    }\n}\n\nexport default Node;\n","import Node from './node';\n\nclass Tree {\n    #_root;\n    #_nodeSet;\n    #_idToNodeDict;\n    #_branchNameToNodeDict;\n    #_formatter;\n    #_currentBranchName;\n    #_currentBranchNode;\n    #_animationSpeed;\n    #_nextId;\n    #_info;\n\n    constructor(treeFormatter) {\n        this._formatter = treeFormatter;\n        this._init();\n        this._buildPreviewTree();\n    }\n\n    _init() {\n        this._root = null;\n        this._nodeSet = new Set();\n        this._idToNodeDict = {};\n        this._branchNameToNodeDict = {};\n        this._info = {\n            totalNodes: 0,\n            width: 0,\n            height: 0,\n            levelOrder: []\n        }\n        this._currentBranchName = undefined;\n        this._currentBranchNode = undefined;\n        this._animationSpeed = 35;\n        this._nodeDiameter = 35;\n        this._nextId = 1;\n    }\n\n    set root(node) {\n        this._root = node;\n\n        this._currentBranchName = 'master';\n        this._currentBranchNode = node;\n\n        this._nodeSet.add(node);\n\n        this._idToNodeDict[node.id] = node;\n\n        for (let i = 0; i < node.branchNames.length; ++i) {\n            this._branchNameToNodeDict[node.branchNames[i]] = node;\n        }\n\n        this.updateTreeInfo();\n        this.adjust();\n\n        this.formatter.margin = node.d;\n    }\n\n    set animationSpeed(spd)     { this._animationSpeed = spd; }\n    set nodeDiameter(d)         { this._nodeDiameter = d; }\n\n    get root()                  { return this._root; }\n    get nodeSet()               { return this._nodeSet; }\n    get branchNameToNodeDict()  { return this._branchNameToNodeDict; }\n    get info()                  { return this._info; }\n    get formatter()             { return this._formatter; }\n    get currentBranchName()     { return this._currentBranchName; }\n    get currentBranchNode()     { return this._branchNameToNodeDict[this._currentBranchName]; }\n    get animationSpeed()        { return this._animationSpeed; }\n    get nodeDiameter()          { return this._nodeDiameter; }\n    get nextId()                { return ++this._nextId; }\n\n    isAnimated() {\n        let status = false;\n        this._nodeSet.forEach((n) => {\n            status = status || n.isAnimated;\n        });\n        return status;\n    }\n\n    doesBranchExist(branchName) {\n        return (this._branchNameToNodeDict[branchName] !== undefined);\n    }\n\n    getNodeFromId(nodeId) {\n        return this._idToNodeDict[nodeId];\n    }\n\n    getNodeFromBranchName(branchName) {\n        return this._branchNameToNodeDict[branchName];\n    }\n\n    addBranchToNode(node, branchName) {\n        node.addBranch(branchName);\n        this._branchNameToNodeDict[branchName] = node;\n    }\n\n    removeBranchFromNode(node, branchName) {\n        if (node !== undefined) {\n            node.removeBranch(branchName);\n            delete this._branchNameToNodeDict[branchName];\n            \n            if (branchName === this._currentBranchName) {\n                this._currentBranchName = undefined;\n                this._currentBranchNode = undefined;\n            }\n        }\n    }\n\n    removeBranchFromNodeId(nodeId, branchName) {\n        let node = this._idToNodeDict[nodeId];\n        this.removeBranchFromNode(node, branchName);\n    }\n\n    setCurrentBranch(branchName) {\n        if (this._branchNameToNodeDict[branchName] !== undefined) {\n            this._currentBranchName = branchName;\n            this._currentBranchNode = this._branchNameToNodeDict[branchName];\n        }\n    }\n     \n    switchBranch(branchName, fromNode, toNode) {\n        fromNode.branchNames.splice(fromNode.branchNames.indexOf(branchName), 1);\n        toNode.branchNames.push(branchName);\n        this._branchNameToNodeDict[branchName] = toNode;\n        \n        if (branchName === this._currentBranchName) {\n            this._currentBranchNode = toNode;\n        }\n    }\n\n    attachExistingBranchToNode(branchName, nodeId) {\n        let node = this._idToNodeDict[nodeId]\n        if (node !== undefined) {\n            node.addBranch(branchName);\n            this._branchNameToNodeDict[branchName] = node;\n            if (this._currentBranchName === branchName) {\n                this._currentBranchNode = node; \n            }\n        }\n    }\n\n    addChildToNode(parentNode, childNode) {\n        if (parentNode === undefined || !this._nodeSet.has(parentNode)) {\n            console.log(`Tree::addChildToNode error: parent node does not exist`);\n            return;\n        }\n\n        parentNode.addChild(childNode);\n        childNode.addParent(parentNode);\n\n        this._nodeSet.add(childNode);\n\n        this._idToNodeDict[childNode.id] = childNode;\n\n        for (let i = 0; i < childNode.branchNames.length; ++i) {\n            this._branchNameToNodeDict[childNode.branchNames[i]] = childNode;\n        }\n        \n        this.updateTreeInfo();\n        this.adjust();\n    }\n\n    addChildToBranchName(parentBranchName, childNode) {\n        let parentNode = this._branchNameToNodeDict[parentBranchName];\n        this.addChildToNode(parentNode, childNode);        \n    }\n\n    addChildToNodeId(parentId, childNode) {\n        let parentNode = this._idToNodeDict[parentId];\n        this.addChildToNode(parentNode, childNode);\n    }\n\n    remove(node) {\n        let parents = node.parents;\n\n        for (let i = 0; i < parents.length; ++i) {\n            let childIndex = parents[i].children.findIndex(n => n.id === node.id);\n            parents[i].children.splice(childIndex, 1);\n        }\n\n        delete this._idToNodeDict[node.id];\n        \n        this._nodeSet.forEach((n) => {\n            if (n.id === node.id) {\n                this._nodeSet.delete(n);\n            }\n        });\n    }\n\n    markNodeForDeletion(node) {\n        if (node === undefined) {\n            return;\n        }\n        node.isAnimated = true;\n        node.isBeingCreated = false;\n    }\n\n    markNodeIdForDeletion(nodeId) {\n        let node = this._idToNodeDict[nodeId];\n        this.markNodeForDeletion(node);\n    }\n\n    areAnyNodesMarkedForDeletion() {\n        let status = false;\n        this._nodeSet.forEach((n) => {\n            status = status || (n.isAnimated && !n.isBeingCreated);\n        });\n        return status;\n    }\n\n    getLCAInfo(currentNode, rebaseNode) {\n        let currentNodePathsToRoot = this.getPathsToNode(currentNode, this._root);\n        let rebaseNodePathsToRoot = this.getPathsToNode(rebaseNode, this._root);\n        let lcaNode;\n\n        for (let i = 0; i < currentNodePathsToRoot.length; ++i) {\n            for (let j = 0; j < rebaseNodePathsToRoot.length; ++j) {\n                lcaNode = this._getLCAFromPathsToRoot(currentNodePathsToRoot[i], rebaseNodePathsToRoot[j]);\n                if (lcaNode !== undefined) {\n                    return {\n                        currentNodePathsToRoot: currentNodePathsToRoot,\n                        rebaseNodePathsToRoot: rebaseNodePathsToRoot,\n                        lcaNode: lcaNode\n                    };\n                }\n            }\n        }\n\n        return {\n            currentNodePathsToRoot: currentNodePathsToRoot,\n            rebaseNodePathsToRoot: rebaseNodePathsToRoot,\n            lcaNode: undefined\n        };\n    }\n\n    getPathsToNode(startNode, endNode) {\n        let allPaths = [];\n        this._recurseToGetPathsToRoot(startNode, endNode, [], allPaths);\n        return allPaths;\n    }\n\n    _recurseToGetPathsToRoot(startNode, endNode, currentPath, allPaths) {\n        currentPath.push(startNode);\n\n        if (startNode === endNode) {\n            allPaths.push(currentPath);\n            return;\n        }\n        \n        let currentPathSnapshot = [];\n        for (let i = 0; i < currentPath.length; ++i) {\n            currentPathSnapshot.push(currentPath[i]);\n        }\n\n        for (let i = 0; i < startNode.parents.length; ++i) {\n            if (i === 0) {\n                this._recurseToGetPathsToRoot(startNode.parents[i], endNode, currentPath, allPaths);\n            }\n            else {\n                let clonedCurrentPath = [];\n                for (let i = 0; i < currentPathSnapshot.length; ++i) {\n                    clonedCurrentPath.push(currentPathSnapshot[i]);\n                }\n                this._recurseToGetPathsToRoot(startNode.parents[i], endNode, clonedCurrentPath, allPaths);\n            }\n        }\n    }\n\n    _getLCAFromPathsToRoot(nodeXPathToRoot, nodeYPathToRoot) {\n        let s = new Set(nodeXPathToRoot);\n        for (let i = 0; i < nodeYPathToRoot.length; ++i) {\n            if (s.has(nodeYPathToRoot[i])) {\n                return nodeYPathToRoot[i];\n            }\n        }\n        return undefined;\n    }\n\n    getNodeCountTillAncestor(descendentNode, ancestorNode) {\n        let paths = this.getPathsToNode(descendentNode, ancestorNode);\n        let s = new Set();\n\n        for (let i = 0; i < paths.length; ++i) {\n            for (let j = 0; j < paths[i].length; ++j) {\n                if (paths[i][j] !== ancestorNode && s.has(paths[i][j]) === false) {\n                    s.add(paths[i][j]);\n                }\n            }\n        }\n\n        return s.size;\n    }\n\n    getBranchSpecificPath(branchName) {\n        let node = this._branchNameToNodeDict[branchName];\n        let pathSet = new Set();\n\n        this._recurseToGetBranchSpecificPath(branchName, node, pathSet);\n        return Array.from(pathSet);\n    }\n\n    _recurseToGetBranchSpecificPath(branchName, currentNode, pathSet) {\n        if (currentNode === this._root) {\n            return pathSet;\n        }\n\n        if (currentNode.children.length === 0) {\n            if (currentNode.branchNames.length === 1 && currentNode.branchNames[0] === branchName) {\n                pathSet.add(currentNode);\n            }\n            else {\n                return pathSet;\n            }\n        }\n        else if (currentNode.children.length === 1){\n            if (pathSet.has(currentNode.children[0])) {\n                pathSet.add(currentNode);\n            }\n            else {\n                return pathSet;\n            }\n        }\n        else {\n            return pathSet;\n        }\n\n        for (let i = 0; i < currentNode.parents.length; ++i) {\n            this._recurseToGetBranchSpecificPath(branchName, currentNode.parents[i], pathSet);\n        }\n\n        return pathSet;\n    }\n\n    reset() {\n        this._init();\n\n        let diameter = 35;\n        let rootNode = new Node('1', diameter);\n        rootNode.addBranch('master');\n        this.root = rootNode;\n\n        this.animationSpeed = 10;\n    }\n\n    adjust() {\n        this._formatter.adjustTree(this);\n    }\n\n    updateTreeInfo() {\n        if (!this._root) {\n            return;\n        }\n\n        this._info.totalNodes = 0;\n        this._info.width = 0;\n        this._info.height = 0;\n        this._info.levelOrder = [];\n\n        let currentLevel = [];\n        let nextLevel = [];\n        \n        nextLevel.push(this._root);\n\n        while (currentLevel.length !== 0 || nextLevel.length !== 0) {\n            if (currentLevel.length === 0) {\n                this._info.totalNodes += nextLevel.length;\n                this._info.width = Math.max(this._info.width, nextLevel.length);\n                this._info.height += 1;\n\n                this._info.levelOrder.push(nextLevel);\n                \n                currentLevel.push(...nextLevel);\n                nextLevel = [];\n            }\n            else {\n                let node = currentLevel.shift();\n                nextLevel.push(...(node.children));\n            }\n        }\n    }\n\n    getTreeInfoStr() {\n        let str = '\\n------------------------\\n=== Tree Information ===\\n------------------------\\n';\n        \n        str += `Total Nodes: ${this._info.totalNodes}\\nWidth: ${this._info.width}\\nHeight: ${this._info.height}\\n`;\n        str += 'Level Order Traversal:\\n';\n\n        let lvl = ''\n        for (let i = 0; i < this._info.levelOrder.length; ++i) {\n            for (let j = 0; j < this._info.levelOrder[i].length; ++j) {\n                lvl += this._info.levelOrder[i][j].id  + ' ';\n            }\n            str += lvl + '\\n';\n            lvl = '';\n        }\n\n        str += '------------------------\\n'\n\n        return str;\n    }\n\n    _buildPreviewTree() {\n        let n1  = new Node('1',  this._nodeDiameter);\n        let n2  = new Node('2',  this._nodeDiameter);\n        let n3  = new Node('3',  this._nodeDiameter);\n        let n4  = new Node('4',  this._nodeDiameter);\n        let n5  = new Node('5',  this._nodeDiameter);\n        let n6  = new Node('6',  this._nodeDiameter);\n        let n7  = new Node('7',  this._nodeDiameter);\n        let n8  = new Node('8',  this._nodeDiameter);\n        let n9  = new Node('9',  this._nodeDiameter);\n        let n10 = new Node('10', this._nodeDiameter);\n        let n11 = new Node('11', this._nodeDiameter);\n        let n12 = new Node('12', this._nodeDiameter);\n        let n13 = new Node('13', this._nodeDiameter);\n        let n14 = new Node('14', this._nodeDiameter);\n        let n15 = new Node('15', this._nodeDiameter);\n        let n16 = new Node('16', this._nodeDiameter);\n        let n17 = new Node('17', this._nodeDiameter);\n        let n18 = new Node('18', this._nodeDiameter);\n        \n        this.root = n1;\n        \n        this.addChildToNodeId('1',  n2);\n        this.addChildToNodeId('1',  n3);\n\n        this.addChildToNodeId('2', n4);\n        this.addChildToNodeId('2', n5);\n        this.addChildToNodeId('3', n6);\n        this.addChildToNodeId('3', n7);\n        this.addChildToNodeId('3', n8);\n        this.addChildToNodeId('3', n9);\n\n        this.addChildToNodeId('4', n10);\n        this.addChildToNodeId('7', n11);\n        this.addChildToNodeId('7', n12);\n        this.addChildToNodeId('9', n13);\n\n        this.addChildToNodeId('10', n14);\n        this.addChildToNodeId('12', n15);\n        this.addChildToNodeId('13', n16);\n\n        this.addChildToNodeId('15', n17);\n\n        this.addChildToNodeId('17', n18);\n\n        this.getNodeFromId('10').addParent(this.getNodeFromId('5'));\n        this.getNodeFromId('15').addParent(this.getNodeFromId('11'));\n        this.getNodeFromId('16').addParent(this.getNodeFromId('8'));\n        this.getNodeFromId('17').addParent(this.getNodeFromId('16'));\n        this.getNodeFromId('18').addParent(this.getNodeFromId('14'));\n\n        this._nodeSet.forEach((n) => {\n            n.isPushed = true;\n        });\n    }\n\n}\n\nexport default Tree;\n","import TreeFormatter from './git-tree-modules/tree-formatter';\nimport Tree from './git-tree-modules/tree';\n\n\n// STATE\nconst state = {\n    tree: new Tree(new TreeFormatter()),\n    hasStarted: false\n};\n\n// GETTERS\nconst getters = {\n    tree: state => state.tree,\n    root: state => state.tree.root,\n    nodeSet: state => state.tree.nodeSet,\n    branchNameToNodeDict: state => state.tree.branchNameToNodeDict,\n    treeInfo: state => state.tree.info,\n    treeFormatter: state => state.tree.formatter,\n    animationSpeed: state => state.tree.animationSpeed,\n    hasStarted: state => state.hasStarted\n};\n\n// MUTATIONS\nconst mutations = {\n    addNodeTo(state, parentName, node) {\n        state.tree.addNodeTo(parentName, node);\n    },\n\n    setFormatterCanvasWidth(state, width) {\n        state.tree.formatter.canvasWidth = width;\n    },\n\n    setFormatterCanvasHeight(state, height) {\n        state.tree.formatter.canvasHeight = height;\n    },\n\n    setAnimationSpeed(state, spd) {\n        state.animationSpeed = spd;\n    },\n\n    startSimulation(state) {\n        state.hasStarted = true;\n        state.tree.reset();\n    }\n};\n\n// ACTIONS\nconst actions = {\n    addNodeTo(context, parentName, node) {\n        context.commit('addNodeTo', parentName, node);\n    },\n\n    setFormatterCanvasWidth(context, width) {\n        context.commit('setFormatterCanvasWidth', width);\n    },\n\n    setFormatterCanvasHeight(context, height) {\n        context.commit('setFormatterCanvasHeight', height);\n    },\n\n    setAnimationSpeed(context, spd) {\n        context.commit('setAnimationSpeed', spd);\n    },\n\n    startSimulation(context) {\n        context.commit('startSimulation');\n    }\n};\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport CreatePersistedState from 'vuex-persistedstate';\nimport Sidebar from './sidebar.store';\nimport Command from './command.store';\nimport Sketch from './sketch.store';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    modules: {\n        Sidebar,\n        Command,\n        Sketch\n    },\n    plugins: [\n        CreatePersistedState({\n            paths: ['Sidebar.isSidebarVisible']\n        })\n    ]\n});\n","// STATE\nconst state = {\n    isSidebarVisible: true,\n    sidebarWidth: 380\n};\n\n\n// GETTERS\nconst getters = {\n    sidebarVisibilityStatus: state => state.isSidebarVisible,\n    sidebarWidth: state => state.sidebarWidth\n};\n\n// MUTATIONS\nconst mutations = {\n    toggleSidebar(state) {\n        state.isSidebarVisible = !state.isSidebarVisible;\n    }\n};\n\n// ACTIONS\nconst actions = {\n    toggleSidebar(context) {\n        context.commit('toggleSidebar');\n    }\n};\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n};\n","// STATE\nconst state = {\n    queue: [],\n    history: []\n};\n\n\n// GETTERS\nconst getters = {\n    queue: state => state.queue,\n    history: state => state.history\n};\n\n// MUTATIONS\nconst mutations = {\n    queueCommand(state, commandObj) {\n        state.queue.push(commandObj);\n    },\n\n    addHistory(state, commandObj) {\n        state.history.push(commandObj);\n    },\n\n    popHistory(state) {\n        return state.history.pop();\n    },\n\n    flushQueue(state) {\n        state.queue = [];\n    },\n\n    flushHistory(state) {\n        state.history = [];\n        state.list = [];\n    }\n};\n\n// ACTIONS\nconst actions = {\n    queueCommand(context, commandObj) {\n        context.commit('queueCommand', commandObj);\n    },\n\n    addHistory(context, commandObj) {\n        context.commit('addHistory', commandObj);\n    },\n\n    popHistory(context) {\n        return context.commit('pop');\n    },\n\n    flushQueue(context) {\n        context.commit('flushQueue');\n    },\n\n    flushHistory(context) {\n        context.commit('flushHistory');\n    }\n};\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n};\n","<template>\n    <div>\n        <v-app-bar app clipped-left color=\"brown lighten-4\" height=\"70\">\n            \n            <v-app-bar-nav-icon class=\"ml-3\" color=\"grey darken-3\" @click.stop=\"toggle()\">\n                <span class=\"ml-5 mr-5 headline\"> <font-awesome-icon icon=\"code-branch\" /> </span>\n            </v-app-bar-nav-icon>\n            \n            <v-toolbar-title class=\"mr-12 align-center\">\n                <span class=\"title font-weight-light\">{{ getTitle }}</span>\n            </v-toolbar-title>\n            \n            <v-spacer />\n\n            <v-slide-y-transition>\n                <div v-if=\"showDestroyTreeButton\" align=\"center\" justify=\"center\" class=\"mr-3\">\n                    <v-btn fab small color=\"#fd5457\" @click.prevent=\"resetSimulation\">\n                        <span class=\"subtitle-1\" style=\"color: white;\"> <font-awesome-icon icon=\"bomb\" /> </span>\n                    </v-btn>\n                </div>\n            </v-slide-y-transition>\n\n            <v-slide-x-transition>\n                <div v-if=\"!hasSimulationStarted && showDragTipsButton\" align=\"center\" justify=\"center\" class=\"mr-3\">\n                    <v-dialog v-model=\"dragTipsPopUp\" width=\"500\">\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn fab small color=\"#4f97f0\" v-on=\"on\">\n                                <span class=\"subtitle-1\" style=\"color: white;\"> <font-awesome-icon icon=\"lightbulb\" /> </span>\n                            </v-btn>\n                        </template>\n\n                        <v-card class=\"command\">\n                            <v-card-title class=\"grey lighten-2 command\">\n                                <strong> Did you know? </strong>\n                            </v-card-title>\n\n                            <v-card-text justify=\"left\" class=\"mt-5\">\n                                You can drag to reposition the nodes :)\n                            </v-card-text>\n                        </v-card>\n                    </v-dialog>\n                </div>\n            </v-slide-x-transition>\n\n            <div align=\"center\" justify=\"center\" class=\"mr-5\">\n                <v-dialog v-model=\"infoPopUp\" width=\"500\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn fab small color=\"#fcba03\" v-on=\"on\">\n                            <span class=\"subtitle-1\" style=\"color: white;\"> <font-awesome-icon icon=\"info\" /> </span>\n                        </v-btn>\n                    </template>\n\n                    <v-card class=\"command\">\n                        <v-card-title class=\"grey lighten-2 command\">\n                            <strong> GitFiddle Commands </strong>\n                        </v-card-title>\n\n                        <v-card-text justify=\"left\" class=\"mt-5\">\n                        <ul>\n                            <li v-for=\"(command, index) in supportedCommandsList\" :key=\"index\">\n                                {{ command }}\n                            </li>\n                        </ul>\n                        </v-card-text>\n                    </v-card>\n                </v-dialog>\n            </div>\n            \n        </v-app-bar>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex';\n\n    export default {\n        data: () => ({\n            showDestroyTreeButton: false,\n            showDragTipsButton: false,\n            dragTipsPopUp: false,\n            infoPopUp: false,\n            supportedCommandsList: [\n                'git branch <name>',\n                'git checkout <name>',\n                'git checkout -b <name>',\n                'git commit',\n                'git merge <name>',\n                'git rebase <name>',\n                'git push',\n                'undo'\n            ]\n        }),\n\n        computed: {\n            ...mapGetters({\n                hasSimulationStarted: 'hasStarted',\n                tree: 'tree'\n            }),\n\n            getTitle() {\n                switch (this.$vuetify.breakpoint.name) {\n                    case 'xs': return 'GitFiddle';\n                    default: return 'GitFiddle: Visualize git branching commands';\n                }\n            },\n\n            isPreviewTreeAnimationCompleted: {\n                get() {\n                    return !this.hasSimulationStarted && !this.tree.isAnimated();\n                }\n            }\n        },\n\n        watch: {\n            isPreviewTreeAnimationCompleted() {\n                this.enableDragTips();\n            },\n\n            hasSimulationStarted() {\n                this.enableDestroyTreeButton();\n            }\n        },\n\n        methods: {\n            ...mapActions({\n                toggle: 'toggleSidebar',\n                resetSimulation: 'startSimulation'\n            }),\n\n            async enableDragTips() {\n                let iPromiseIWillEnableIt = new Promise((response) => {\n                    setTimeout(() => response(true), 500)\n                });\n                this.showDragTipsButton = await iPromiseIWillEnableIt;\n            },\n\n            async enableDestroyTreeButton() {\n                let iPromiseIWillEnableIt = new Promise((response) => {\n                    setTimeout(() => response(true), 1000)\n                });\n                this.showDestroyTreeButton = await iPromiseIWillEnableIt;\n            }\n        }\n    }\n</script>\n\n<style>\n    @import url('https://fonts.googleapis.com/css?family=Ubuntu+Mono&display=swap');\n\n    .command {\n        font-family: 'Ubuntu Mono';\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n</style>\n","import { render, staticRenderFns } from \"./menubar.vue?vue&type=template&id=39ed2d96&\"\nimport script from \"./menubar.vue?vue&type=script&lang=js&\"\nexport * from \"./menubar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./menubar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VAppBarNavIcon } from 'vuetify/lib/components/VAppBar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VSlideXTransition } from 'vuetify/lib/components/transitions';\nimport { VSlideYTransition } from 'vuetify/lib/components/transitions';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VAppBar,VAppBarNavIcon,VBtn,VCard,VCardText,VCardTitle,VDialog,VSlideXTransition,VSlideYTransition,VSpacer,VToolbarTitle})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-app-bar',{attrs:{\"app\":\"\",\"clipped-left\":\"\",\"color\":\"brown lighten-4\",\"height\":\"70\"}},[_c('v-app-bar-nav-icon',{staticClass:\"ml-3\",attrs:{\"color\":\"grey darken-3\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggle()}}},[_c('span',{staticClass:\"ml-5 mr-5 headline\"},[_c('font-awesome-icon',{attrs:{\"icon\":\"code-branch\"}})],1)]),_c('v-toolbar-title',{staticClass:\"mr-12 align-center\"},[_c('span',{staticClass:\"title font-weight-light\"},[_vm._v(_vm._s(_vm.getTitle))])]),_c('v-spacer'),_c('v-slide-y-transition',[(_vm.showDestroyTreeButton)?_c('div',{staticClass:\"mr-3\",attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-btn',{attrs:{\"fab\":\"\",\"small\":\"\",\"color\":\"#fd5457\"},on:{\"click\":function($event){$event.preventDefault();return _vm.resetSimulation($event)}}},[_c('span',{staticClass:\"subtitle-1\",staticStyle:{\"color\":\"white\"}},[_c('font-awesome-icon',{attrs:{\"icon\":\"bomb\"}})],1)])],1):_vm._e()]),_c('v-slide-x-transition',[(!_vm.hasSimulationStarted && _vm.showDragTipsButton)?_c('div',{staticClass:\"mr-3\",attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-dialog',{attrs:{\"width\":\"500\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"fab\":\"\",\"small\":\"\",\"color\":\"#4f97f0\"}},on),[_c('span',{staticClass:\"subtitle-1\",staticStyle:{\"color\":\"white\"}},[_c('font-awesome-icon',{attrs:{\"icon\":\"lightbulb\"}})],1)])]}}],null,false,1030779032),model:{value:(_vm.dragTipsPopUp),callback:function ($$v) {_vm.dragTipsPopUp=$$v},expression:\"dragTipsPopUp\"}},[_c('v-card',{staticClass:\"command\"},[_c('v-card-title',{staticClass:\"grey lighten-2 command\"},[_c('strong',[_vm._v(\" Did you know? \")])]),_c('v-card-text',{staticClass:\"mt-5\",attrs:{\"justify\":\"left\"}},[_vm._v(\" You can drag to reposition the nodes :) \")])],1)],1)],1):_vm._e()]),_c('div',{staticClass:\"mr-5\",attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-dialog',{attrs:{\"width\":\"500\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"fab\":\"\",\"small\":\"\",\"color\":\"#fcba03\"}},on),[_c('span',{staticClass:\"subtitle-1\",staticStyle:{\"color\":\"white\"}},[_c('font-awesome-icon',{attrs:{\"icon\":\"info\"}})],1)])]}}]),model:{value:(_vm.infoPopUp),callback:function ($$v) {_vm.infoPopUp=$$v},expression:\"infoPopUp\"}},[_c('v-card',{staticClass:\"command\"},[_c('v-card-title',{staticClass:\"grey lighten-2 command\"},[_c('strong',[_vm._v(\" GitFiddle Commands \")])]),_c('v-card-text',{staticClass:\"mt-5\",attrs:{\"justify\":\"left\"}},[_c('ul',_vm._l((_vm.supportedCommandsList),function(command,index){return _c('li',{key:index},[_vm._v(\" \"+_vm._s(command)+\" \")])}),0)])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class Command {\n    #_cmd;\n    #_isExecuting;\n    #_hasExecuted;\n    #_undoInfo;\n\n    constructor(cmd) {\n        this._cmd = cmd;\n        this._hasExecuted = false;\n        this._undoInfo = {};\n    }\n\n    set hasExecuted(val)    { this._hasExecuted = val;      }\n    set undoInfo(jsonInfo)  { this._undoInfo = jsonInfo     }\n\n    get command()       { return this._cmd;         }\n    get hasExecuted()   { return this._hasExecuted; }\n    get undoInfo()      { return this._undoInfo;    }\n}\n\nexport default Command;\n","import Node from './node';\n\nclass CommandHandler {\n    #_regex;\n\n    constructor() {    \n        this._regex = /(^\\b(git|Git)\\b ((\\b(branch|checkout -b|checkout|merge|rebase)\\b \\b[A-Za-z0-9]{2,}\\b)|(\\bcommit\\b)|(\\bpush\\b))$)|(^undo$)/g;\n    }\n\n    getValidCommands(cmd) {\n        let found = cmd.match(this._regex);\n        if (found === null || found.length !== 1 || cmd !== found[0]) {\n            console.log(`CommandHandler error: invalid command ${cmd}`);\n            return [];\n        }\n\n        let validCommands = [];\n        let cmdTokens = cmd.split(' ');\n        \n        if (cmdTokens.length <= 3) {\n            validCommands.push(cmd);\n        }\n        else {\n            if (cmdTokens[1] === 'checkout') {\n                if (cmdTokens[2] === '-b') {\n                    validCommands.push(`${cmdTokens[0]} branch ${cmdTokens[3]}`);\n                }\n                validCommands.push(`${cmdTokens[0]} checkout ${cmdTokens[3]}`);\n            }\n        }\n        \n        return validCommands;\n    }\n\n    process(cmdObject, tree, history) {\n        cmdObject.hasExecuted = false;\n\n        let command = cmdObject.command;\n        let cmdTokens = command.split(' ');\n        let operationType = '';\n\n        if (cmdTokens[0] === 'undo') {\n            if (history.length === 0) {\n                return false;\n            }\n            operationType = 'undo';\n            cmdTokens = history[history.length - 1].command.split(' ');\n        }\n        else {\n            operationType = 'do';\n        }\n\n        let status;\n\n        switch (cmdTokens[1]) {\n            case 'branch': {\n                status = this.branch(operationType, cmdTokens[2], tree, cmdObject, history);\n                break;\n            }\n\n            case 'checkout': {\n                status = this.checkout(operationType, cmdTokens[2], tree, cmdObject, history);\n                break;\n            }\n\n            case 'commit': {\n                status = this.commit(operationType, tree, cmdObject, history);\n                break;\n            }\n\n            case 'merge': {\n                status = this.merge(operationType, cmdTokens[2], tree, cmdObject, history);\n                break;\n            }\n\n            case 'rebase': {\n                status = this.rebase(operationType, cmdTokens[2], tree, cmdObject, history);\n                break;\n            }\n\n            case 'push': {\n                status = this.push(operationType, tree, cmdObject, history);\n                break;\n            }\n\n            default: {\n                status = false;\n                break;\n            }\n        }\n        \n        cmdObject.hasExecuted = true;\n\n        if (status && operationType !== 'undo') {\n            history.push(cmdObject);\n        }\n\n        return status;\n    }\n\n    branch(operationType, branchName, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                if (tree.doesBranchExist(branchName)) {\n                    return false;\n                }\n\n                cmdObject.undoInfo['removeBranchFromNodeId'] = tree.currentBranchNode.id;\n                cmdObject.undoInfo['removeBranchName'] = branchName;\n                tree.addBranchToNode(tree.currentBranchNode, branchName);\n                break;\n            }\n\n            case 'undo': {\n                let popped = history.pop();\n                tree.removeBranchFromNodeId(popped.undoInfo['removeBranchFromNodeId'], popped.undoInfo['removeBranchName']);\n                break;\n            }\n            \n            default: {\n                console.log('Invalid branch command');\n                break;\n            }\n        }\n\n        return true;\n    }\n\n    checkout(operationType, branchName, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                if (!tree.doesBranchExist(branchName)) {\n                    return false;\n                }\n\n                cmdObject.undoInfo['branchName'] = tree.currentBranchName;\n                tree.setCurrentBranch(branchName);\n                break;\n            }\n\n            case 'undo': {\n                let popped = history.pop();\n                tree.setCurrentBranch(popped.undoInfo['branchName']);\n                break;\n            }\n            \n            default: {\n                console.log('Invalid chekcout command');\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    commit(operationType, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                let newNode = new Node(tree.nextId, tree.nodeDiameter);\n\n                cmdObject.undoInfo['checkoutBranchName'] = tree.currentBranchName;\n                cmdObject.undoInfo['checkoutNodeId'] = tree.currentBranchNode.id;\n                cmdObject.undoInfo['removeNodeId'] = newNode.id;\n                \n                tree.addChildToNode(tree.currentBranchNode, newNode);\n                tree.switchBranch(tree.currentBranchName, tree.currentBranchNode, newNode);\n\n                break;\n            }\n\n            case 'undo': {\n                let popped = history.pop();\n\n                tree.attachExistingBranchToNode(popped.undoInfo['checkoutBranchName'], popped.undoInfo['checkoutNodeId']);\n                tree.setCurrentBranch(popped.undoInfo['checkoutBranchName']);\n                tree.markNodeIdForDeletion(popped.undoInfo['removeNodeId']);\n                \n                break;\n            }\n\n            default: {\n                console.log('Invalid commit command');\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    merge(operationType, mergeWithBranchName, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                if (!tree.doesBranchExist(mergeWithBranchName)) {\n                    return false;\n                }\n\n                let mergeWithNode = tree.getNodeFromBranchName(mergeWithBranchName);\n\n                if (mergeWithNode !== undefined) {\n                    for (let i = 0; i < tree.currentBranchNode.parents.length; ++i) {\n                        if (tree.currentBranchNode.parents[i] === mergeWithNode) {\n                            return false;\n                        }\n                    }\n\n                    cmdObject.undoInfo['removeParentNodeId'] = mergeWithNode.id;\n                    this.commit('do', tree, cmdObject, history);\n                    tree.currentBranchNode.addParent(mergeWithNode);\n                }\n\n                break;\n            }\n\n            case 'undo': {\n                tree.currentBranchNode.removeParent(cmdObject.undoInfo['removeParentNodeId']);\n                this.commit('undo', tree, cmdObject, history);\n                break;\n            }\n\n            default: {\n                console.log('Invalid merge command');\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    rebase(operationType, branchName, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                if (!tree.doesBranchExist(branchName)) {\n                    return false;\n                }\n\n                if (tree.currentBranchName === branchName) {\n                    return false;\n                }\n\n                let currentNode = tree.currentBranchNode;\n                let rebaseNode = tree.getNodeFromBranchName(branchName);\n\n                if (rebaseNode.hasChild(currentNode)) {\n                    break;\n                }\n                else if (currentNode.hasChild(rebaseNode)) {\n                    cmdObject.undoInfo['rebaseUndoType'] = 1;\n                    cmdObject.undoInfo['switchBranchFromNodeId'] = rebaseNode.id;\n                    cmdObject.undoInfo['switchBranchToNodeId'] = currentNode.id;\n                    tree.switchBranch(tree.currentBranchName, currentNode, rebaseNode);\n                    break;\n                }\n\n                let lcaInfo = tree.getLCAInfo(currentNode, rebaseNode);\n                let count = tree.getNodeCountTillAncestor(currentNode, lcaInfo.lcaNode);\n                let branchSpecificPath = tree.getBranchSpecificPath(tree.currentBranchName);\n\n                let createNodesInfo = [];\n                let removeNodesInfo = [];\n\n                let lastCommittedNode = rebaseNode;\n                for (let i = 0; i < count; ++i) {\n                    let newNode = new Node(tree.nextId, tree.nodeDiameter);\n                    tree.addChildToNode(lastCommittedNode, newNode);\n                    lastCommittedNode = newNode;\n                    removeNodesInfo.push(newNode.getNodeInfo());\n                }\n\n                for (let i = branchSpecificPath.length - 1; i >= 0; --i) {\n                    createNodesInfo.push(branchSpecificPath[i].getNodeInfo());\n                    tree.markNodeForDeletion(branchSpecificPath[i]);\n                }\n                \n                cmdObject.undoInfo['rebaseUndoType'] = 2;\n                cmdObject.undoInfo['createNodesInfo'] = createNodesInfo;\n                cmdObject.undoInfo['removeNodesInfo'] = removeNodesInfo;\n                cmdObject.undoInfo['switchBranchFromNodeId'] = lastCommittedNode.id;\n                cmdObject.undoInfo['switchBranchToNodeId'] = tree.currentBranchNode.id;\n\n                tree.switchBranch(tree.currentBranchName, tree.currentBranchNode, lastCommittedNode);\n\n                break;\n            }\n\n            case 'undo': {\n                let popped = history.pop();\n\n                if (popped.undoInfo['rebaseUndoType'] == 1) {\n                    let fromNode = tree.getNodeFromId(popped.undoInfo['switchBranchFromNodeId']);\n                    let toNode = tree.getNodeFromId(popped.undoInfo['switchBranchToNodeId']);\n                    tree.switchBranch(tree.currentBranchName, fromNode, toNode);\n                }\n                else {\n                    for (let i = 0; i < popped.undoInfo['createNodesInfo'].length; ++i) {\n                        let newNode = new Node(popped.undoInfo['createNodesInfo'][i]['id'], popped.undoInfo['createNodesInfo'][i]['diameter']);\n                        \n                        for (let j = 0; j < popped.undoInfo['createNodesInfo'][i]['parentIds'].length; ++j) {\n                            let parentNode = tree.getNodeFromId(popped.undoInfo['createNodesInfo'][i]['parentIds'][j]);\n                            tree.addChildToNode(parentNode, newNode);\n                        }\n                    }\n\n                    let fromNode = tree.getNodeFromId(popped.undoInfo['switchBranchFromNodeId']);\n                    let toNode = tree.getNodeFromId(popped.undoInfo['switchBranchToNodeId']);\n                    tree.switchBranch(tree.currentBranchName, fromNode, toNode);\n\n                    for (let i = 0; i < popped.undoInfo['removeNodesInfo'].length; ++i) {\n                        let node = tree.getNodeFromId(popped.undoInfo['removeNodesInfo'][i]['id']);\n                        tree.remove(node);\n                    }\n                }\n\n                break;\n            }\n\n            default: {\n                console.log('Invalid rebase command');\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    push (operationType, tree, cmdObject, history) {\n        switch (operationType) {\n            case 'do': {\n                let pathsToRoot = tree.getPathsToNode(tree.currentBranchNode, tree.root);\n                let pushedNodeIds = [];\n\n                for (let i = 0; i < pathsToRoot.length; ++i) {\n                    for (let j = 0; j < pathsToRoot[i].length; ++j) {\n                        if (!pathsToRoot[i][j].isPushed) {\n                            pathsToRoot[i][j].isPushed = true;\n                            pushedNodeIds.push(pathsToRoot[i][j].id);\n                        }\n                    }\n                }\n\n                cmdObject.undoInfo['undoPushNodeIds'] = pushedNodeIds;\n                \n                break;\n            }\n\n            case 'undo': {\n                let popped = history.pop();\n                for (let i = 0; i < popped.undoInfo['undoPushNodeIds'].length; ++i) {\n                    tree.getNodeFromId(popped.undoInfo['undoPushNodeIds'][i]).isPushed = false;\n                }\n                break;\n            }\n\n            default:\n                console.log('Invalid push operation');\n                return false;\n        }\n\n        return true;\n    }\n}\n\nexport default CommandHandler;\n","<template>\n\n    <v-navigation-drawer dark v-model=\"status\" app clipped flat mobile-break-point :width=\"sidebarWidth\" class=\"commandNavigationDrawer\" ref=\"drawer\">\n        \n        <v-container class=\"overflow-y-auto commandContainer\">\n            <v-row>\n                <div class=\"commandHistory\">\n                    <v-list dense class=\"mb-10\">\n                    <v-subheader>Command History</v-subheader>\n                    <v-list-item-group class=\"mb-2\">\n                        <v-list-item v-for=\"(commandObj, i) in history\" :key=\"i\">\n                            <v-list-item-content>\n                                <v-row>\n                                    <v-col>\n                                        <span>{{ commandObj.command }}</span>\n                                    </v-col>\n                                </v-row>\n                            </v-list-item-content>\n                        </v-list-item>\n                    </v-list-item-group>\n\n                    <v-divider></v-divider>\n                    <v-divider></v-divider>\n\n                    <v-subheader class=\"mt-2\">Execution Queue</v-subheader>\n                    <v-list-item-group class=\"mb-2\">\n                        <v-list-item v-for=\"(commandObj, i) in queue\" :key=\"i\">\n                            <v-list-item-content>\n                                <v-row>\n                                    <v-col cols=8>\n                                        <span>{{ commandObj.command }}</span>\n                                    </v-col>\n                                    <v-spacer></v-spacer>\n                                    <v-col align=\"right\">\n                                        <span> <font-awesome-icon icon=\"spinner\" pulse /> </span>\n                                    </v-col>\n                                </v-row>\n                            </v-list-item-content>\n                        </v-list-item>\n                    </v-list-item-group>\n\n                    <v-divider></v-divider>\n                    <v-divider></v-divider>\n                    \n                    </v-list>\n                </div>\n            </v-row>\n\n            <v-row class=\"mt-10\">\n                 <v-footer absolute padless color='#363636' class='mt-3'>\n                    <v-text-field v-model=\"cmd\" label=\"Command\" :rules=\"[isAcceptingCommands, isCommandValid]\" @keydown.enter=\"commandEntered\" outlined height=\"40px\" class=\"ml-4 mr-4\" autocomplete=\"off\"></v-text-field>\n                </v-footer>\n            </v-row>            \n        </v-container>\n        \n    </v-navigation-drawer>\n\n</template>\n\n\n<script>\n    import { mapGetters, mapActions } from 'vuex';\n    import Command from '../store/git-tree-modules/command';\n    import CommandHandler from '../store/git-tree-modules/command-handler';\n\n    export default {\n        data: () => ({\n            cmd: '',\n            commandHandler: new CommandHandler(),\n            isNoCommandEntered: true,\n            wasLastCommandValid: false\n        }),\n\n        computed: {\n            ...mapGetters([\n                'sidebarWidth',\n                'tree',\n                'hasStarted',\n                'queue',\n                'history'\n            ]),\n\n            status: {\n                get () {\n                    return this.$store.getters.sidebarVisibilityStatus;\n                },\n                set(val) {\n                    return val;\n                }\n            },\n\n            treeRoot: {\n                get() {\n                    return this.$store.getters.tree.root;\n                }\n            }\n        },\n\n        methods: {\n            ...mapActions({\n                queueGitCommand: 'queueCommand',\n                flushGitCommandQueue: 'flushQueue',\n                flushGitCommandHistory: 'flushHistory'\n            }),\n\n            isAcceptingCommands() {\n                return this.hasStarted || 'Start the Simulation';\n            },\n\n            isCommandValid() {\n                return (this.isNoCommandEntered || this.wasLastCommandValid) || 'Invalid Command';\n            },\n\n            commandStrToObj(commandStr) {\n                let commandObj = null;\n\n                for (let i = 0; i < this.history.length; ++i) {\n                    if (this.history[i].command === commandStr) {\n                        commandObj = this.history[i];\n                        break;\n                    }\n                }\n\n                return commandObj;\n            },\n\n            isBeingProcessed(commandObj) {\n                if (commandObj !== null) {\n                    return (commandObj.hasExecuted === false);\n                }\n                else {\n                    return false;\n                }\n            },\n\n            hasBeenProcessed(commandObj) {\n                if (commandObj !== null) {\n                    return (commandObj.hasExecuted === true);\n                }\n                else {\n                    return false;\n                }\n            },\n\n            commandEntered() {\n                if (this.hasStarted) {\n                    let commands = this.commandHandler.getValidCommands(this.cmd.trim());\n                    \n                    if (commands.length === 0) {\n                        this.wasLastCommandValid = false;\n                    }\n                    else {\n                        this.wasLastCommandValid = true;\n                        for (let i = 0; i < commands.length; ++i) {\n                            let commandObj = new Command(commands[i]);\n                            this.queueGitCommand(commandObj);\n                        }\n                    }\n                    \n                    this.cmd = '';\n                    this.isNoCommandEntered = false;\n                }\n            },\n\n            executeQueuedCommands() {\n                while (this.queue[0] !== undefined) {\n                    if (this.tree.isAnimated()) {\n                        window.setTimeout(this.executeQueuedCommands, 100);\n                        break;\n                    }\n                    else {\n                        let top = this.queue[0];\n                        let status = this.commandHandler.process(top, this.tree, this.history);\n\n                        if (!status) {\n                            this.wasLastCommandValid = false;\n                            this.flushGitCommandQueue();\n                        }\n                        else {\n                            this.removeAQueuedCommand();\n                        }\n                    }\n                }\n            },\n\n            removeAQueuedCommand() {\n                if (this.tree.isAnimated()) {\n                    window.setTimeout(this.removeAQueuedCommand, 100);\n                }\n                else {\n                    this.queue.shift();\n                }\n            }\n        },\n\n        watch: {\n            treeRoot() {\n                this.flushGitCommandQueue();\n                this.flushGitCommandHistory();\n            },\n\n            queue() {\n                this.executeQueuedCommands();\n            }\n        }\n    }\n\n</script>\n\n\n<style>\n    @import url('https://fonts.googleapis.com/css?family=Ubuntu+Mono&display=swap');\n\n    .commandNavigationDrawer {\n        font-family: 'Ubuntu Mono';\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .commandHistory {\n        height: 100%;\n        width: 100%;\n    }\n\n</style>\n","import { render, staticRenderFns } from \"./sidebar.vue?vue&type=template&id=2f934aad&\"\nimport script from \"./sidebar.vue?vue&type=script&lang=js&\"\nexport * from \"./sidebar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./sidebar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VFooter } from 'vuetify/lib/components/VFooter';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemGroup } from 'vuetify/lib/components/VList';\nimport { VNavigationDrawer } from 'vuetify/lib/components/VNavigationDrawer';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VSubheader } from 'vuetify/lib/components/VSubheader';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VCol,VContainer,VDivider,VFooter,VList,VListItem,VListItemContent,VListItemGroup,VNavigationDrawer,VRow,VSpacer,VSubheader,VTextField})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-navigation-drawer',{ref:\"drawer\",staticClass:\"commandNavigationDrawer\",attrs:{\"dark\":\"\",\"app\":\"\",\"clipped\":\"\",\"flat\":\"\",\"mobile-break-point\":\"\",\"width\":_vm.sidebarWidth},model:{value:(_vm.status),callback:function ($$v) {_vm.status=$$v},expression:\"status\"}},[_c('v-container',{staticClass:\"overflow-y-auto commandContainer\"},[_c('v-row',[_c('div',{staticClass:\"commandHistory\"},[_c('v-list',{staticClass:\"mb-10\",attrs:{\"dense\":\"\"}},[_c('v-subheader',[_vm._v(\"Command History\")]),_c('v-list-item-group',{staticClass:\"mb-2\"},_vm._l((_vm.history),function(commandObj,i){return _c('v-list-item',{key:i},[_c('v-list-item-content',[_c('v-row',[_c('v-col',[_c('span',[_vm._v(_vm._s(commandObj.command))])])],1)],1)],1)}),1),_c('v-divider'),_c('v-divider'),_c('v-subheader',{staticClass:\"mt-2\"},[_vm._v(\"Execution Queue\")]),_c('v-list-item-group',{staticClass:\"mb-2\"},_vm._l((_vm.queue),function(commandObj,i){return _c('v-list-item',{key:i},[_c('v-list-item-content',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"8\"}},[_c('span',[_vm._v(_vm._s(commandObj.command))])]),_c('v-spacer'),_c('v-col',{attrs:{\"align\":\"right\"}},[_c('span',[_c('font-awesome-icon',{attrs:{\"icon\":\"spinner\",\"pulse\":\"\"}})],1)])],1)],1)],1)}),1),_c('v-divider'),_c('v-divider')],1)],1)]),_c('v-row',{staticClass:\"mt-10\"},[_c('v-footer',{staticClass:\"mt-3\",attrs:{\"absolute\":\"\",\"padless\":\"\",\"color\":\"#363636\"}},[_c('v-text-field',{staticClass:\"ml-4 mr-4\",attrs:{\"label\":\"Command\",\"rules\":[_vm.isAcceptingCommands, _vm.isCommandValid],\"outlined\":\"\",\"height\":\"40px\",\"autocomplete\":\"off\"},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.commandEntered($event)}},model:{value:(_vm.cmd),callback:function ($$v) {_vm.cmd=$$v},expression:\"cmd\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./footer.vue?vue&type=template&id=135bfbcc&\"\nimport script from \"./footer.vue?vue&type=script&lang=js&\"\nexport * from \"./footer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./footer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\ninstallComponents(component, {VBtn,VCard,VCardText})\n","<template>\n    <v-card class=\"flex\" flat tile>\n        <v-card-text class=\"py-2 white--text text-right\">\n            <span class=\"caption mr-2\"> @ Tanvir Islam</span>\n            <v-btn fab depressed small text href=\"https://www.linkedin.com/in/tanvirmislam/\" target=\"_blank\"> <span class=\"subtitle-1\"> <font-awesome-icon :icon=\"['fab', 'linkedin']\" /> </span> </v-btn>\n            <v-btn fab depressed small text href=\"https://github.com/tanvirmislam\" target=\"_blank\"> <span class=\"subtitle-1\"> <font-awesome-icon :icon=\"['fab', 'github-alt']\" /> </span> </v-btn>\n        </v-card-text>\n    </v-card>\n</template>\n\n\n<script>\n    export default {\n        data: () => ({\n\n        }),\n\n        methods: {\n\n        }\n    }\n\n</script>\n\n<style>\na {\n    color: white;\n}\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"flex\",attrs:{\"flat\":\"\",\"tile\":\"\"}},[_c('v-card-text',{staticClass:\"py-2 white--text text-right\"},[_c('span',{staticClass:\"caption mr-2\"},[_vm._v(\" @ Tanvir Islam\")]),_c('v-btn',{attrs:{\"fab\":\"\",\"depressed\":\"\",\"small\":\"\",\"text\":\"\",\"href\":\"https://www.linkedin.com/in/tanvirmislam/\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"subtitle-1\"},[_c('font-awesome-icon',{attrs:{\"icon\":['fab', 'linkedin']}})],1)]),_c('v-btn',{attrs:{\"fab\":\"\",\"depressed\":\"\",\"small\":\"\",\"text\":\"\",\"href\":\"https://github.com/tanvirmislam\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"subtitle-1\"},[_c('font-awesome-icon',{attrs:{\"icon\":['fab', 'github-alt']}})],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./app-root.vue?vue&type=template&id=0d66301c&\"\nimport script from \"./app-root.vue?vue&type=script&lang=js&\"\nexport * from \"./app-root.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VContent } from 'vuetify/lib/components/VContent';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VFooter } from 'vuetify/lib/components/VFooter';\ninstallComponents(component, {VApp,VContainer,VContent,VDivider,VFooter})\n","<template>\n    <div id=\"app\">\n        <v-app>\n            <nav>\n                <div> <menubar /> </div>\n                <div> <sidebar /> </div>\n            </nav>\n\n            <v-content>\n                <v-container class=\"my-4\">\n                    <router-view></router-view>\n                </v-container>\n            </v-content>\n\n            <v-divider></v-divider>\n\n            <v-footer dark padless>\n                <footer-row />\n            </v-footer>\n        </v-app>\n    </div>\n    \n</template>\n\n<script>\n    import MenuBar from './menubar';\n    import SideBar from './sidebar';\n    import Footer from './footer';\n\n    export default {\n        components: {\n            'menubar': MenuBar,\n            'sidebar': SideBar,\n            'footer-row': Footer\n        },\n\n        data: () => ({\n            \n        }),\n        \n        created() {\n            // this.$vuetify.theme.dark = true\n        }\n    }\n</script>\n\n<style>\n\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',[_c('nav',[_c('div',[_c('menubar')],1),_c('div',[_c('sidebar')],1)]),_c('v-content',[_c('v-container',{staticClass:\"my-4\"},[_c('router-view')],1)],1),_c('v-divider'),_c('v-footer',{attrs:{\"dark\":\"\",\"padless\":\"\"}},[_c('footer-row')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// ---------------------------------------------------------------------------------\n// Imports\n// ---------------------------------------------------------------------------------\n// Vue\nimport Vue from 'vue';\n\n// Fonts and Icons\nimport { FontAwesomeIcon } from './plugins/icons';\n\n// Vuetify\nimport vuetify from './plugins/vuetify';\n\n// Axios (HTTP Client)\nimport axios from 'axios';\n\n// Router\nimport router from './router/index';\nimport { sync } from 'vuex-router-sync';\n\n// Store (Vuex)\nimport store from './store';\n\n// App root\nimport App from './components/app-root';\n\n// ---------------------------------------------------------------------------------\n// ---------------------------------------------------------------------------------\n\n\n// Initiate Vue\nVue.config.productionTip = false\nVue.prototype.$http = axios;\nVue.component('font-awesome-icon', FontAwesomeIcon);\n\nsync(store, router);\n\nconst app = new Vue({\n    store,\n    router,\n    vuetify,\n    ...App\n});\n\napp.$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./footer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./footer.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sidebar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sidebar.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}